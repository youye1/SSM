<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.youye.mybatis.mapper.OrderMapper">
    
    <!-- 订单查询 关联查询用户的resultMap
    将整个查询结果映射到Order对象中-->
    <resultMap id="OrderUserResultMap" type="order">
        <!-- 配置映射的订单信息-->
        <!-- 如果订单信息是由多个列组成的唯一标识，就配置多个id-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createTime"/>
        <result column="note" property="note"/>

        <!-- 配置映射的关联信息-->
        <!-- property:要将关联的用户信息映射到order对象的哪个属性-->
        <association property="user" javaType="cn.youye.pojo.User">
            <!-- id；关联的用户表的唯一标识-->
            <!-- id.column: 用于指定唯一标示的用户信息列-->
            <id column="user_id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
        </association>
    </resultMap>

    <!-- 定义resultMap-->
    <!-- 查询订单及订单明细的resultMap-->
    <resultMap id="OrdersAndOrderdetailResultMap" type="order"
            extends="OrderUserResultMap">
        <!-- 包含的信息：
             订单信息order，
             用户信息user，
             订单的明细信息orderdetail-->
        <!-- 继承resultMap-->
        <!-- 一个订单包含多个明细-->
        <!-- collection：对关联查询到的多条记录映射到一个集合对象中-->
        <!-- ofType：指定映射到list集合属性中的pojo类型-->
        <collection property="orderDetails" ofType="orderDetail">
            <id column="orderdetail_id" property="id"/>
            <result column="orders_id" property="ordersId"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
        </collection>
    </resultMap>
    
    
    <!-- 一对一查询 返回resultType-->
        <select id="getOrderUser" resultType="OrderCustom">
            SELECT orders.*,user.username,user.sex,user.address
            FROM orders,user
            WHERE orders.user_id=user.id
        </select>

    <!--    一对一查询 返回resultMap-->
    <select id="getOrderUserResultMap" resultMap="OrderUserResultMap">
        SELECT orders.*,user.username,user.sex,user.address
            FROM orders,user
            WHERE orders.user_id=user.id
    </select>

    <!-- 一对多查询 返回resultMap-->
    <!-- 要求映射订单order对象，但是将order对应的orderdetail
         以列表的形式添加在order对象中
         即：每一个order对象只能单独一行显示-->
    <select id="getOrdersAndOrderdetailResultMap" resultMap="OrdersAndOrderdetailResultMap">
        SELECT orders.*,
        orderdetail.*,
        user.username,
        user.sex,
        user.address,
        orderdetail.id orderdetail_id,
        orderdetail.items_id,
        orderdetail.items_num
        FROM orders,USER,orderdetail
        WHERE orders.user_id=user.id AND orderdetail.orders_id=orders.id
    </select>


    <!-- 延迟加载 -->
    <resultMap id="OrderUserLazyLoadingResultMap" type="order">

        <!-- 对订单信息进行映射配置-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createTime"/>
        <result column="note" property="note"/>
        <!-- 实现对用户信息的延迟加载
             select：指定延迟加载所需要执行的statement的id
                   (根据user_id来查询用户信息)
                   需要使用userMapper.xml中的根据id查询用户的select
             column：订单信息关联用户信息的列-->
        <association property="user" javaType="user"
                     select="cn.youye.mapper.UserMapper.getById" column="user_id">
        </association>

    </resultMap>

    <!-- 查询订单表关联用户表-->
    <select id="getOrderUserLazyLoading" resultMap="OrderUserLazyLoadingResultMap">
        SELECT * FROM orders
    </select>
    
    

</mapper>